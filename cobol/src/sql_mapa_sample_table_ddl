
-- Sample DDL for RDBMS tables to hold mapa output
-- An awk script to split the mapa output into separate
-- files suitable for loading into these tables is 
-- called mapaOutputSplit.

CREATE TABLE MAPA_COBOL_FILE
  ( COBOL_FILE_KEY CHAR(36) 
    PRIMARY KEY
  , FILE_NAME VARCHAR(255)
  , FILE_PROCESS_TIMESTAMP TIMESTAMP
  );

CREATE TABLE MAPA_COBOL_COPY
  ( COBOL_COPY_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_FILE_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_FILE
    ON DELETE CASCADE
  , COPY_NAME VARCHAR(255)
  );

CREATE TABLE MAPA_COBOL_BASIS
  ( COBOL_BASIS_KEY CHAR(36)
    PRIMARY KEY
  , COBOL_FILE_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_FILE
    ON DELETE CASCADE
  , BASIS_NAME VARCHAR(255)
  );

CREATE TABLE MAPA_COBOL_PROGRAM
  ( COBOL_PROGRAM_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_FILE_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_FILE
    ON DELETE CASCADE
  , STATEMENT_COUNT INTEGER
  , CONDITIONAL_STATEMENT_COUNT INTEGER
  , CICS_STATEMENT_COUNT INTEGER
  , SQL_STATEMENT_COUNT INTEGER
  , SQLIMS_STATEMENT_COUNT INTEGER
  , DATA_DESCRIPTION_TYPE1_COUNT INTEGER
  , DATA_DESCRIPTION_TYPE2_COUNT INTEGER
  , DATA_DESCRIPTION_TYPE3_COUNT INTEGER
  , DATA_DESCRIPTION_TYPESQL_COUNT INTEGER
  , PROGRAM_NAME VARCHAR(255)
  , COBOL_PROGRAM_TYPE CHAR(8)
  );

CREATE TABLE MAPA_COBOL_CALL
  ( COBOL_CALL_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , CALLER_NAME VARCHAR(255)
  , CALL_TYPE VARCHAR(63)
  , CALLED_NAME VARCHAR(255)
  );

CREATE TABLE MAPA_COBOL_UNRESOLVED_CALL
  ( COBOL_UNRESOLVED_CALL_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , CALLER_NAME VARCHAR(255)
  , CALL_TYPE VARCHAR(63)
  , CALLED_NAME VARCHAR(255)
  );

CREATE TABLE MAPA_COBOL_DD
  ( COBOL_DD_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , DD_NAME VARCHAR(63)
  , COBOL_FILE_NAME VARCHAR(63)
  , OPEN_INPUT_COUNT INTEGER
  , OPEN_OUTPUT_COUNT INTEGER
  , OPEN_IO_COUNT INTEGER
  , OPEN_EXTEND_COUNT INTEGER
  );

CREATE TABLE MAPA_COBOL_DB2TABLE
  ( COBOL_DB2TABLE_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , DB2TABLE_NAME VARCHAR(255)
  , SQL_STATEMENT_TYPE VARCHAR(63)
  );

CREATE TABLE MAPA_COBOL_IMSSEGMENT
  ( COBOL_IMSSEGMENT_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , IMSSEGMENT_NAME VARCHAR(255)
  , DLI_STATEMENT_TYPE VARCHAR(63)
  );

CREATE TABLE MAPA_COBOL_SQLINCLUDE
  ( COBOL_SQLINCLUDE_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , SQLINCLUDE_NAME VARCHAR(255)
  );

CREATE TABLE MAPA_COBOL_CICS_START
  ( COBOL_CICS_START_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , CICS_TRANID CHAR(4)
  );

CREATE TABLE MAPA_COBOL_CICS_RUN
  ( COBOL_CICS_RUN_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , CICS_TRANID CHAR(4)
  );

CREATE TABLE MAPA_COBOL_CICS_IO
  ( COBOL_CICS_IO_KEY CHAR(36) 
    PRIMARY KEY
  , COBOL_PROGRAM_KEY CHAR(36) 
    REFERENCES MAPA_COBOL_PROGRAM
    ON DELETE CASCADE
  , CICS_FILE CHAR(8)
  , COBOL_CICS_IO_TYPE VARCHAR(63)
  );










