#!/bin/bash

function testLexAndParse {

	while read line
	do
		java -cp "./class$sep./antlr-4.13.2-complete.jar" org.antlr.v4.gui.TestRig $kind startRule -tokens < $line 1>/dev/null 2>$tmp02
		grep -v '^\[' $tmp02
		if [ "$?" -eq 0 ]
		then
			echo $line " NOT OK"
			export myRC=12
		else
			echo $line " OK"
		fi
		if [[ "$line" == *dsnutil* ]]
		then
			export filePart=${line: 9}
			java -cp "./class$sep./antlr-4.13.2-complete.jar" org.antlr.v4.gui.TestRig $kind startRule -tree < $line | ./src/treeCount -vruleName=$filePart -vruleType=dsnutil
			export myRC1=$?
			if [ "$myRC1" -gt "$myRC" ]
			then
				export myRC=$myRC1
			fi
		fi
	done < $tmp01

}

STARTTIME=$(date +%s)
export kind=DB2zSQL
export myRC=0
export tmp01=/tmp/$(date +%Y%m%d%H%M%S).$$.mapadb2z01
export tmp02=/tmp/$(date +%Y%m%d%H%M%S).$$.mapadb2z02
if [ "$1" = "all" ]
then
  ls -Al testdata/sql_* | awk '{print $9}' > $tmp01
elif [ "$1" = "dsnutil" ]
then
  ls -Al testdata/sql_call_dsnutil* | awk '{print $9}' > $tmp01
else
  ls -Al testdata/sql_$1 | awk '{print $9}' > $tmp01
fi

case "$OSTYPE" in
  solaris*) echo "SOLARIS" ;;
  darwin*)  echo "OSX" ;;
  linux*)   echo "LINUX" ;;
  bsd*)     echo "BSD" ;;
  msys*)    echo "WINDOWS" ;;
  cygwin*)  echo "ALSO WINDOWS" ;;
  *)        echo "unknown: $OSTYPE" ;;
esac

export sep=":"
if [[ "$OSTYPE" == "msys"* ]]; then
  export sep=";"
fi

testLexAndParse

rm $tmp01
rm $tmp02

ENDTIME=$(date +%s)

echo "elapsed time $(($ENDTIME - $STARTTIME)) seconds"

exit $myRC

